---
# Ansible inventory for dotfiles installation
# This defines the target hosts for automation

all:
  children:
    # Local machine installation
    local:
      hosts:
        localhost:
          ansible_connection: local
          ansible_become: true
          ansible_become_method: sudo
          # Override if you want to run without sudo prompts
          # ansible_become_password: "your_password"
      vars:
        # Local installation specific variables
        install_mode: "local"
        dotfiles_user: "{{ ansible_env.USER }}"
        dotfiles_home: "{{ ansible_env.HOME }}"
        dotfiles_path: "{{ ansible_env.HOME }}/.dotfiles"

    # Remote Linux machines (Debian/Ubuntu based)
    linux_debian:
      hosts:
        # Add your remote Debian/Ubuntu machines here
        # Example:
        # my-remote-server:
        #   ansible_host: 192.168.1.100
        #   ansible_user: username
        #   ansible_ssh_private_key_file: ~/.ssh/id_rsa
      vars:
        ansible_os_family: "Debian"
        package_manager: "apt"
        install_mode: "remote"

    # Remote Linux machines (Red Hat/CentOS/Fedora based)
    linux_redhat:
      hosts:
        # Add your remote Red Hat based machines here
        # Example:
        # my-fedora-server:
        #   ansible_host: 192.168.1.101
        #   ansible_user: username
        #   ansible_ssh_private_key_file: ~/.ssh/id_rsa
      vars:
        ansible_os_family: "RedHat"
        package_manager: "dnf"
        install_mode: "remote"

    # Remote Linux machines (Arch based)
    linux_arch:
      hosts:
        # Add your remote Arch based machines here
        # Example:
        # my-arch-server:
        #   ansible_host: 192.168.1.102
        #   ansible_user: username
        #   ansible_ssh_private_key_file: ~/.ssh/id_rsa
      vars:
        ansible_os_family: "Archlinux"
        package_manager: "pacman"
        install_mode: "remote"

    # WSL instances
    wsl:
      hosts:
        # Add your WSL instances here
        # Example:
        # wsl-ubuntu:
        #   ansible_connection: local
        #   ansible_become: true
      vars:
        install_mode: "wsl"
        is_wsl: true

# Global variables for all hosts
all:
  vars:
    # User configuration
    default_shell: "/bin/zsh"
    dotfiles_repo: "https://github.com/yourusername/dotfiles.git"  # Update this

    # Installation preferences
    install_optional_tools: true
    install_development_tools: true
    install_gui_applications: true

    # Feature flags
    enable_docker: true
    enable_nodejs: true
    enable_rust: true
    enable_go: true
    enable_python_tools: true

    # Editor preferences
    install_neovim: true
    install_zed: true
    install_vscode: true

    # Terminal preferences
    install_ghostty: true
    install_alacritty: true
    install_kitty: true

    # Font installation
    install_nerd_fonts: true

    # Stow configuration
    stow_packages:
      - nvim
      - tmux
      - zsh
      - ghostty
      - zed
      - alacritty
      - kitty

    # Backup configuration
    create_backup: true
    backup_suffix: "{{ ansible_date_time.epoch }}"

    # Git configuration (update these with your details)
    git_user_name: "Your Name"
    git_user_email: "your.email@example.com"

    # SSH configuration
    ssh_key_type: "ed25519"
    ssh_key_comment: "{{ ansible_env.USER }}@{{ ansible_hostname }}"

# Environment-specific groups
linux:
  children:
    - linux_debian
    - linux_redhat
    - linux_arch
  vars:
    is_linux: true

# Quick access groups for partial installations
minimal:
  children:
    - local
  vars:
    install_optional_tools: false
    install_development_tools: false
    install_gui_applications: false
    stow_packages:
      - nvim
      - tmux
      - zsh

development:
  children:
    - local
  vars:
    install_development_tools: true
    enable_docker: true
    enable_nodejs: true
    enable_rust: true
    enable_go: true
