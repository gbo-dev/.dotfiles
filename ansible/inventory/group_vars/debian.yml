---
# Debian/Ubuntu specific variables
# These variables override global settings for Debian-based systems

# Package manager configuration
package_manager: "apt"
update_cache: true
cache_valid_time: 3600  # 1 hour

# System packages for Debian/Ubuntu
packages:
  essential:
    - curl
    - wget
    - git
    - build-essential
    - make
    - gcc
    - g++
    - unzip
    - ca-certificates
    - gnupg
    - lsb-release
    - software-properties-common
    - apt-transport-https

  cli_tools:
    - zsh
    - stow
    - tmux
    - fzf
    - ripgrep
    - fd-find  # Note: fd-find on Debian/Ubuntu, not fd
    - bat
    - htop
    - tree
    - xclip
    - shellcheck
    - jq
    - tar
    - xz-utils

  optional:
    - httpie
    - tldr
    - imagemagick
    - ffmpeg
    - sqlite3
    - postgresql-client
    - redis-tools
    - vim
    - nano

  development:
    - python3
    - python3-pip
    - python3-dev
    - python3-venv
    - nodejs
    - npm
    - default-jdk

# Package alternatives for Debian/Ubuntu
package_alternatives:
  fd: "fd-find"
  bat: "batcat"

# Command aliases that need to be created
command_links:
  - src: "/usr/bin/fdfind"
    dest: "/usr/local/bin/fd"
    condition: "{{ ansible_distribution in ['Ubuntu', 'Debian'] }}"
  - src: "/usr/bin/batcat"
    dest: "/usr/local/bin/bat"
    condition: "{{ ansible_distribution in ['Ubuntu', 'Debian'] }}"

# Repositories to add
repositories:
  # Docker repository
  docker:
    key_url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    key_path: "/etc/apt/keyrings/docker.gpg"
    repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin

  # Microsoft repository (for VS Code)
  microsoft:
    key_url: "https://packages.microsoft.com/keys/microsoft.asc"
    key_path: "/etc/apt/trusted.gpg.d/packages.microsoft.gpg"
    repo: "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main"
    packages:
      - code

  # GitHub CLI repository
  github_cli:
    key_url: "https://cli.github.com/packages/githubcli-archive-keyring.gpg"
    key_path: "/usr/share/keyrings/githubcli-archive-keyring.gpg"
    repo: "deb [arch={{ ansible_architecture }} signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
    packages:
      - gh

# Font packages
fonts:
  packages:
    - fonts-firacode
    - fonts-jetbrains-mono
    - fonts-hack
    - fonts-powerline
    - fontconfig

# Development tools specific to Debian/Ubuntu
development:
  # Python configuration
  python:
    packages:
      - python3
      - python3-pip
      - python3-dev
      - python3-venv
      - python3-setuptools
      - python3-wheel

  # Node.js configuration
  nodejs:
    # Use NodeSource repository for latest Node.js
    repository:
      key_url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
      repo: "deb https://deb.nodesource.com/node_{{ nodejs_version | default('lts') }}.x {{ ansible_distribution_release }} main"

  # Java configuration
  java:
    packages:
      - default-jdk
      - default-jre

# System services
services:
  enable_on_boot:
    - ssh
    - systemd-resolved
  start_immediately:
    - ssh

# Distribution specific settings
distribution_settings:
  ubuntu:
    enable_universe: true
    enable_multiverse: false
  debian:
    enable_non_free: true
    enable_contrib: true

# Snap packages (Ubuntu specific)
snap_packages:
  enabled: "{{ ansible_distribution == 'Ubuntu' }}"
  packages: []  # Add snap packages here if needed

# Flatpak configuration
flatpak:
  enabled: false
  add_flathub: true
  packages: []

# System configuration
system:
  timezone: "UTC"
  locale: "en_US.UTF-8"
  keyboard_layout: "us"

# Desktop environment packages (if GUI is detected)
desktop_packages:
  gnome:
    - gnome-tweaks
    - gnome-shell-extensions
  kde:
    - kde-config-gtk-style
    - qt5-style-plugins
  xfce:
    - xfce4-goodies

# Terminal emulator packages
terminal_packages:
  - gnome-terminal
  - xterm

# Network tools
network_tools:
  - curl
  - wget
  - net-tools
  - dnsutils
  - traceroute
  - nmap

# Archive and compression tools
archive_tools:
  - zip
  - unzip
  - tar
  - gzip
  - bzip2
  - xz-utils
  - p7zip-full

# Version specific overrides
version_overrides:
  # Ubuntu 22.04 LTS (Jammy)
  "22.04":
    nodejs_version: "18"
    python_version: "3.10"

  # Ubuntu 20.04 LTS (Focal)
  "20.04":
    nodejs_version: "16"
    python_version: "3.8"

  # Debian 12 (Bookworm)
  "12":
    nodejs_version: "18"
    python_version: "3.11"

  # Debian 11 (Bullseye)
  "11":
    nodejs_version: "16"
    python_version: "3.9"

# APT configuration
apt_config:
  update_cache: true
  cache_valid_time: 3600
  install_recommends: false
  force_apt_get: true
  autoremove: true
  autoclean: true

# Security updates
security:
  enable_unattended_upgrades: false
  security_updates_only: true
